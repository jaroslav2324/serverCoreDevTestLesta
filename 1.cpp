/*Вопрос №1

На языке Python или C++ написать алгоритм (функцию) определения четности целого числа,
который будет аналогичен нижеприведенному по функциональности, но отличен по своей сути.
Объяснить плюсы и минусы обеих реализаций.

Пример:

def isEven(value):
    return value % 2 == 0
*/


// Стандартная реализация.
// Интуитвно понятна, код легко читается.

bool isEven(int value){
    return value % 2 == 0;
}

// С помощью побитового И и маски 0x1 можно извлечь последний бит числа value.
// Последний бит определяет четность/нечетность числа - если он равен 1, то число нечетное, иначе - четное.
// Соответственно, при отрицании полученноного результата число будет четным при истинном значении выражения.
// Такая реализация должна работать несколько быстрее в силу использования битовых операторов, однако скорость работы
// зависит от аппаратной реализации конкретной ЭВМ. При этом такой код прочитать сложнее в сравнении с интуитивно
// понятной реализацией.

bool isEven(int value){
    return !(value & 0x1);
}


